{
  "problems": [
    "public class Main {\n    public static void main(String[] a) {\n       int x = 5;\n       if (x > 3) {\n           int y = x * 2;\n           System.out.println(\"A\");\n           for (int i = 1; i <= 3; i++) {\n               int z = y + i;\n               System.out.println(\"B\");\n               if (z % 2 == 0) {\n                   String m = \"C\";\n                   System.out.println(m);\n                   for (int j = 1; j <= 2; j++) {\n                       int w = z * j;\n                       System.out.println(w);\n                   }\n               }\n           }\n           System.out.println(x + y);\n       }\n   }\n}\n",
    "public class Main {\n    public static void main(String[] a) {\n        int[] b1 = {1, 2, 3, 4, 5};\n        int[] b2 = new int[b1.length];\n        for (int i = 0; i < b1.length; i++) {\n            b2[i] = b1[i] * 2;\n            if (i % 2 == 0) {\n                b2[i] = b1[i] + 3;\n            } else {\n                b2[i] = b1[i] - 1;\n                for (int j = 0; j < b2.length; j++) {\n                    if (b2[j] > 0) {\n                        b2[j] += i;\n                    }\n                }\n            }\n        }\n        System.out.print(\"H: \");\n        for (int n : b1) {\n            System.out.print(n + \" \");\n        }\n        System.out.print(\"\\nI: \");\n        for (int n : b2) {\n            System.out.print(n + \" \");\n        }\n    }\n}",
    "public class Main {\n    public static void main(String[] a) {\n        int b1 = 6;\n        int b = 4;\n        int c = 0;\n        if ((b1 > 5 && b > 2) || (b < 4 && b1 > 3 && (b1 + b) < 10)) {\n            c = b1 * 2;\n            while (c > 0) {\n                System.out.print(c + \" \");\n                c--;\n            }\n        } else if (b < 4 || (b1 > 3 && (b1 - b) > 1)) {\n            c = b * 3;\n            do {\n                System.out.print(c + \" \");\n                c--;\n            } while (c > 0);\n        } else {\n            c = b1 + b;\n        }\n        System.out.println(c);\n    }\n}",
    "public class Main {\n    public static void main(String[] a) {\n        int d = 0;\n        for (int e = 1; e <= 5; e++) {\n            if ((e % 2 == 0 && e % 3 != 0) || (e % 2 != 0 && e % 3 == 0)) {\n                d += e;\n                while (d > 20) {\n                    System.out.println(\"M: \" + d);\n                    d -= 5;\n                }\n            } else if (e % 2 == 0 && e % 4 == 0) {\n                d -= e;\n                for (int f = 1; f <= 2; f++) {\n                    d += (e + f);\n                }\n            } else {\n                d += e;\n            }\n        }\n        System.out.println(\"N: \" + d);\n    }\n}",
    "public class Main {\n    public static void main(String[] a) {\n        String g1 = \"Java\";\n        String g2 = \" Programming\";\n        g1 = g1.substring(0, 2) + \"XYZ\" + g1.substring(2) + g2.substring(1, 6).toUpperCase();\n        g1 = g1.substring(0, 4) + \"DEFGH\" + g1.substring(7);\n        System.out.println(\"O: \" + g1);\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        int[] n = {8, 15, 3, 6, 12, 5};\n        p(n);\n        p(n);\n    }\n    public static void p(int[] n) {\n        int i = 0, j;\n        while (i < n.length - 1 && (j = 0) < n.length - 1) do {\n            n[j] = (n[j] * 3 - n[i]);\n        } while (j++ < n.length - 1 && ++i < n.length - 1);\n        i = 0;\n        while (i < n.length) System.out.print(n[i++] + \" \");\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        String[] fruits = {\"Apples,\", \"Oranges,\", \"Bananas,\", \"Grapes,\", \"Pineapples,\", \"Mangoes.\"};\n        int[] quantities = {1, 0, 0, 1, 4, 2};\n        process(fruits, quantities);\n        display(quantities, fruits);\n    }\n    public static int[] process(String[] items, int[] counts) {\n        int i = 0, j = 0;\n        while (i < items.length - 1) {\n            j = 0;\n            do {\n                counts[j] = (counts[j] - counts[i]) * 2;\n            } while (j++ < counts.length - 1);\n            i++;\n        }\n        return counts;\n    }\n    public static void display(int[] counts, String[] items) {\n        int i = 0;\n        while (i < counts.length) {\n            System.out.print(counts[i] + \" \" + items[i]);\n            i++;\n        }\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        int n = 5;\n        patternCipher(n);\n    }\n    static void patternCipher(int size) {\n        for (int i = 1; i <= size; i++) {\n            int current = i;\n            for (int j = 1; j <= i; j++) {\n                System.out.print(current + \" \");\n                current += i - j;\n            }\n            System.out.println();\n        }\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        int[] a = {5, 3, 7};\n        int[] r = new int[2];\n        r[0] = calc(a, true);\n        r[1] = calc(a, false);\n        display(r);\n    }\n    static int calc(int[] in, boolean first) {\n        int i = first ? 0 : 1;\n        int j = first ? 1 : 0;\n        return (in[i] + in[j]) * in[2]--;\n    }\n    static void display(int[] result) {\n        System.out.println(\"Result: \");\n        for (int v : result) {\n            System.out.print(v + \" \");\n        }\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        boolean f1 = (int) Math.pow(2, Math.log(8) / Math.log(2)) == 4;\n        int x = f1 ? 42 : 11;\n        int y = executeOperation(x, f1);\n        System.out.println(\"Obfuscated Result: \" + y);\n    }\n    private static int executeOperation(int n, boolean flag) {\n        if (flag ^ true) {\n            return n >> 1;\n        } else {\n            boolean isRecursive = false;\n            int r = performRecursive(n, isRecursive);\n            return r & -r;\n        }\n    }\n    private static int performRecursive(int v, boolean recursiveFlag) {\n        if (v <= 1 || !recursiveFlag) {\n            return 1;\n        } else {\n            boolean innerFlag = true;\n            int r = performRecursive(v - (innerFlag ? 1 : 0), innerFlag);\n            return r + v;\n        }\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        int bC = 0b10100;\n        int hC = 0x27;\n        int r = p(bC, hC);\n        System.out.printf(\"BC: %d%n\", bC);\n        System.out.printf(\"HC: %d%n\", hC);\n        System.out.printf(\"Result: %d%n\", r);\n    }\n    public static int p(int b, int h) {\n        int nB = ~b;\n        int xR = nB ^ h;\n        int oR = xR | (b & h);\n        return oR;\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        int n = 42;\n        double pi = 3.141592653589793;\n        String hello = \"Hello\";\n        String world = \"World\";\n        int choice = n % 4;\n        switch (choice) {\n            case 0:\n                System.out.printf(\"Result: %+010d%n\", n);\n                break;\n            case 2:\n                System.out.printf(\"Formatted Pi: %.4f%n\", pi);\n            case 1:\n                System.out.printf(\"Combined Text: %S%s%n\", hello, world);\n            case 3:\n                System.out.printf(\"Joined Text: %-10s%S%n\", hello, world);\n                break;\n            default:\n                System.out.printf(\"Invalid Choice: %d%n\", choice);\n        }\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        char[] c1 = {'a', 'p', 'p', 'l', 'e'};\n        char[] c2 = {'g', 'r', 'a', 'p', 'e'};\n        String s1 = new String(c1), s2 = s1.substring(1, 4);\n        int i = 0, l = s1.length();\n        boolean flag = true;\n        while (flag){\n            if (i<6) {\n                if (i<3){\n                    System.out.println(\"Too small: \" + i);\n                    i++;\n                }\n                else {\n                    System.out.print(\"Getting there\");\n                    i += 2;\n                }\n            }\n            else flag = false;\n        }\n        String r = (s1 += (++i <= --l) ? s2 : \"Hi\") + \" \" +\n                s2.toUpperCase();\n        System.out.println(\"Result: \" + r);\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        char[] characters = { 'a', 'n', 'a', 'l', 'y', 's', 'i', 's' };\n        String str1 = new String(characters), str2 = str1.concat(\"oops\");\n        String str3 = new String(generateCode());\n        int length = str1.length(), index = 0;\n        String result = (str1 += (++index >= length) ? str2.substring(2, 5)\n                : \"\") + \" \" + str2.toUpperCase();\n        String result2 = str1.substring(2, 5) + str3.substring(3, 8) +\n                str2.substring(1, 4) + str3.substring(8, 10);\n        System.out.println(\"Result: \" + result);\n        System.out.println(\"Result2: \" + result2);\n    }\n    private static char[] generateCode() {\n        char[] charArr = { 'd', ' ', 'c', 'o', 'm', 'p', 'l', 'i', 'c',\n                'a', 't', 'e', 'd' };\n        return charArr;\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        boolean leverOne = false, leverTwo = false;\n        String[] list = {\"Alpha, \", \"Beta, \", \"Charlie, \", \"Delta, \", \"Echo, \", \"Foxtrot, \", \"Gamma, \", \"Hotel, \"};\n        list = operation(leverOne, leverTwo, list);\n        int increment = 0;\n        do {\n            System.out.print(list[increment]);\n        }\n        while (++increment < list.length);\n\n    }\n    public static String[] operation(boolean lOne, boolean lTwo, String[] x) {\n        int i = 1;\n        int j = x.length;\n        String temp;\n        do {\n            if (lOne == lTwo && i % 2 == 0) {\n                lTwo = !lOne;\n                temp = x[i];\n                x[i] = x[i - 1];\n                x[i - 1] = temp;\n            } else if (lOne != lTwo && i % 2 == 0) {\n                lTwo = !lOne;\n                temp = x[i];\n                x[i] = x[i / 2];\n                x[i / 2] = temp;\n            } else if (lOne == lTwo && i % 2 != 0) {\n                lOne = !lTwo;\n                x[i] = \"India, \";\n                System.out.println(\"The order is as follows: \");\n\n            } else {\n                lTwo = true;\n            }\n        }\n        while (++i < j);\n        return x;\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        int theOneTrueNumber = 42;\n        operation(theOneTrueNumber);\n        System.out.println(\"Hello Science Olympiad Students!\");\n    }\n\n    public static void operation(int x) {\n        while (x != 1) {\n            if (x % 7 == 0) {\n                System.out.println(x - 2);\n                x = x / 7;\n            } else if (x == 6) {\n                System.out.println(x * 2);\n                x *= 4;\n            } else if (x % 2 == 0) {\n                System.out.println(x);\n                x = 15;\n            } else if (x % 5 == 0) {\n                System.out.print(x / 3 + \" \");\n                x = 21;\n            } else {\n                System.out.println(-x);\n                x = 1;\n            }\n        }\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        char[] problem = {'u', 'o', 'Y', 'A', 'e', 'r', 's', 'e', 'w', 'e', 'm', 'o'};\n        problem = help(problem);\n        printOut(problem);\n    }\n\n    public static char[] help(char[] x) {\n        char temp;\n        int i = 0;\n        while (i < x.length) {\n            temp = x[i];\n            x[i] = x[(i + 2) % 12];\n            x[(i + 2) % 12] = temp;\n            i += 3;\n        }\n        return x;\n    }\n\n    public static void printOut(char[] x) {\n        int i = 0;\n        while (i < x.length) {\n            if ((i + 1) % 6 == 0) {\n                System.out.println(x[i]);\n                i++;\n            } else {\n                System.out.print(x[i]);\n                i++;\n            }\n        }\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        String[] names = {\"Bulldogs, \", \"Boyceville, \", \"Tiffany Creek, \", \"Science Olympiad, \",};\n\n        names = operation(names);\n        System.out.println(names[0] + names[1] + names[2] + names[3]);\n    }\n\n    public static String[] operation(String[] x) {\n        String temp;\n        int i = 0;\n        while (i < (x.length / 2)) {\n            temp = x[i];\n            x[i] = x[(i + 3) % 4];\n            x[(i + 3) % 4] = temp;\n            i++;\n        }\n        return x;\n    }\n}",
    "public class Main {\n    public static void main(String[] args) {\n        int first = 12, second = 7, third = 8;\n        double fourth = 6;\n        first = division(first);\n        second = division(second);\n        third = division(third);\n        fourth = multiplication(fourth);\n        System.out.println(first + \", \" + second + \", \" + third + \", \" + fourth + \".\");\n    }\n    public static int division(int x) {\n        if(x % 2 == 0){\n            int result = 0;\n            result = x/2;\n            return result;\n        }\n        else{\n            return division(x-=1);\n        }\n    }\n    public static double multiplication(double x){\n        double result = 0;\n        result = x * (0.33333333333333333);\n        return result;\n    }\n}"
  ],
  "solutions": [
    "A\nB\nB\nC\n12\n24\nB\n15",
    "H: 1 2 3 4 5 \nI: 8 5 9 6 8 ",
    "\n12 11 10 9 8 7 6 5 4 3 2 1 0",
    "N: 15",
    "O: JaXYDEFGHPROGR",
    "16 30 6 12 24 5 32 60 12 24 48 5 ",
    "-160 Apples,-160 Oranges,-160 Bananas,-128 Grapes,0 Pineapples,64 Mangoes.",
    "1 \n2 3 \n3 5 6 \n4 7 9 10 \n5 9 12 14 15 ",
    "Result: \n56 48 ",
    "Obfuscated Result: 5",
    "BC: 20\nHC: 39\nResult: -52",
    "Formatted Pi: 3.1416\nCombined Text: HELLOWorld\nJoined Text: Hello     WORLD",
    "Too small: 0\nToo small: 1\nToo small: 2\nGetting thereGetting thereResult: appleHi PPL",
    "Result: analysis ANALYSISOOPS\nResult2: alyomplinalca",
    "The order is as follows: \nAlpha, Charlie, India, Echo, Delta, Gamma, Foxtrot, Hotel, ",
    "40\n12\n24\n5 19\n-3\nHello Science Olympiad Students!",
    "YoureA\nwesome",
    "Boyceville, Science Olympiad, Tiffany Creek, Bulldogs, ",
    "6, 3, 4, 2.0."
  ]
}